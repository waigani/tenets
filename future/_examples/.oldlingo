# SQL joins http://www.codeproject.com/KB/database/Visual_SQL_Joins/Visual_SQL_JOINS_orig.jpg

# SELECT is redundant. 
# lang with lang
# 
https://drive.google.com/drive/u/0/folders/0B7pC4_7htbx6UjNqdlJUdHZ6RGc
# 

# <select_list> is every node that has a < next to it.

# FROM TableA A
A <import:
	# facts`

B <import:
	# facts

# Inner Join
<A:
  name: $B.name

# Inner Join
<A:
  left-join:
    name: $B.name

# Right Join

# Left Join b.Key null

# Right Join a.Key null

# Full Outer Join

# Full Outer Join A.Key or B.Key null


lexicons:
    - codelingo/common as _

      match:
      	file:
      	  path: x
          <import:
        	name: p
        file:
          path: ! $x
          not:
              import:
            	name: $p

lexicons:
  - codelingo/common as _

tenets:
  - name: unusual-packages
    doc: "Discovers packages imported in only one or two places"
    comment: "This package is unusual in your project. Do you actually need it?"
    match:
      import:
        name: n
      <import:
        name: $n
        count: == 1

  - name: non-unique-function-name
    doc: "Checks functions names for uniquness against other functions in project"
    comment: "This function name is not unique across your project"
    match:
      func:
        name: n
      <func:
        name: $n
        count: > 1

  - name: unused-args
    doc: "Checks functions for unused arguments"
    comment: 
      text: 
        - "This function has unused arguments: "
        - "Unused args "
        - "Unused args again "
      group_concat:
        set: $x
        limit: 3
      text: 
        - "...consider revising"
        - " please fix"
        - ""
    match:
      <func: 
        args: x
        expr:
          var: y
      !set-compare:
        sub: $x
        super: $y    

  - name: no-friend-classes
    doc: "Disallows the use of friend classes (c++ specific)"
    comment:
      text:
         - "Friend classes are bad programming practice, please avoid them: "
         - "I've found more friend classes... please change the code: "
         - "Friend classes (again) "
      text: $f
    match:
      class:
        friend-class:
          <name: f

  - name: private-var-pass-by-ref
    doc: "Disallows private or protected member variables passed by reference out of a public function"
    comment:
      text:
        - "Please do not pass protected member varaibles by reference out of public functions! "
        - "Do not ref pass private vars out of public functions "
        - "Priv var returned by ref again!"
      text: $v
    match:
      class: c
        var[1]:
          access: private
          name: v
      func:
        access: public
        return:
          byref: $v
    
  - name: func-no-comments
    doc: "Functions except main() must have comment blocks."
    comment:
      text:
        - "Please add a comment block to the head of "
        - ""
      text: $n
      text:
        - ""
        - " lack comment blocks"
    match:
      func:
        !comment
        name: n
    
  - name: func-over-used-parameters 
    doc: "Prompts that commonly grouped/used parameter sets to functions should be turned into a data structure or global variables."
    comment:
      text: 
        - "These parameters appear many times in various functions. Consider grouping them in a dataset or making them gloabl: "
        - "Over-used parameters in multiple functions, consider data structure or global: "
        - "Over-used parameters..."
      group_concat:
        set: $c
        limit: 3
    match:
      func:
        name: x
        args: a
      <func:
        !name: $x
        args: b
      set-intersect: c
        operand: $a
        operand: $b
        count: > 2
        

  - name: find-base-class-instantiations
    doc: "Prompts the user when they directly instantiate a base class (they should probably be using a factory pattern)"
    comment:
      text:
        - "The following base classes are being directly instantiated: "
        - "Base classes directly instantiated: "
        - "Instantiation of base classes (again): "
    group_concat:
      set: $c
      limit: 3
    text:
      - " Please use the appropriate factory or subclass."
      - " Use a factory."
      - ""
    match:
      new:
        class: c
      class: $c
        !super  
    

  - name: semantically-identical-revised-code
    doc: "Finds newly committed code which is semantically identical to old removed code in git repo"
    comment:
      text:
       - "The following code originally appeared in"
       - "Unintentional code reversion to "
      text: $c
    match:
      file:
        path: p
        merkle: 
          hash: h
          chunk: c
      git.history:
        file:
          path: $p
          merkle:
            hash: $h


